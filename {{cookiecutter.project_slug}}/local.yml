version: '3'

volumes:
  local_postgres_data: {}
  local_postgres_data_backups: {}
  local_node_modules:

services:
  django:
    build:
      context: ./backend/
      dockerfile: ./compose/local/django/Dockerfile
    image: {{cookiecutter.project_slug}}_local_django
    container_name: {{cookiecutter.project_slug}}_backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      # Directories below will appear in /app but they will be empty 
      - /app/compose/
      - /app/requirements/
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.common/.postgres
      - ./.envs/.local/.postgres
    depends_on:
      - postgres
    command: /start

  postgres:
    build:
      context: ./backend
      dockerfile: ./compose/production/postgres/Dockerfile
    image: {{cookiecutter.project_slug}}_local_postgres
    container_name: {{cookiecutter.project_slug}}_database
    volumes:
      - local_postgres_data:/var/lib/postgresql/data:Z
      - local_postgres_data_backups:/backups:z
    env_file:
      - ./.envs/.common/.postgres
      - ./.envs/.local/.postgres
   
  react:
    build: 
      context: ./frontend
      dockerfile: ./compose/local/react/Dockerfile
    image: {{cookiecutter.project_slug}}_local_react
    container_name: {{cookiecutter.project_slug}}_frontend
    stdin_open: true
    tty: true
    volumes:
      - ./frontend:/app
      - local_node_modules:/app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      - django
    command: npm start

{%- if cookiecutter.use_mailhog == "y" %}

  mailhog:
    image: mailhog/mailhog:v1.0.1
    container_name: {{cookiecutter.project_slug}}_mailhog
    ports:
      - "8025:8025"
    depends_on:
      - django
{% endif %}