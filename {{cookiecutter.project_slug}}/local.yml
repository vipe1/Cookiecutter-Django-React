version: '3'

volumes:
  {{cookiecutter.project_slug}}-local_postgres_data: {}
  {{cookiecutter.project_slug}}-local_postgres_data_backups: {}
  {{cookiecutter.project_slug}}-node-modules:

services:
  django:
    build:
      context: ./backend/
      dockerfile: ./compose/local/django/Dockerfile
    image: {{cookiecutter.project_slug}}_local_django
    container_name: {{cookiecutter.project_slug}}_backend
    volumes:
      - .:/app:z
    ports:
      - "8000:8000"
    env_file:
      - ./.envs/.local/.postgres
    depends_on:
      - postgres
    command: /start

  postgres:
    build:
      context: ./backend
      dockerfile: ./compose/production/postgres/Dockerfile
    image: {{cookiecutter.project_slug}}_local_postgres
    container_name: {{cookiecutter.project_slug}}_database
    volumes:
      - {{cookiecutter.project_slug}}-local_postgres_data:/var/lib/postgresql/data:Z
      - {{cookiecutter.project_slug}}-local_postgres_data_backups:/backups:z
    env_file:
      - ./.envs/.local/.postgres
   
  react:
    build: ./frontend
    image: {{cookiecutter.project_slug}}_local_react
    container_name: {{cookiecutter.project_slug}}_frontend
    stdin_open: true
    tty: true
    volumes:
      - ./frontend:/app/frontend
      # One-way volume to use node_modules from inside image
      - {{cookiecutter.project_slug}}-node-modules:/app/frontend/node_modules
    ports:
      - "80:3000"
    environment:
      - NODE_ENV=development
    depends_on:
      - django
    command: npm start
